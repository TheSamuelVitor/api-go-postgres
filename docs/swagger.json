{
    "swagger": "2.0",
    "info": {
        "description": "Este é o backend do sistema de gerenciamento.\nPara controle de código está sendo usado o Github\nLink para o repositorio: https://github.com/TheSamuelVitor/api-go-postgres",
        "title": "API Sistema de Gerenciamento de Projetos",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Samuel Vitor",
            "url": "https://github.com/TheSamuelVitor/api-go-postgres",
            "email": "thesamuelvitor.py@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/membros": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Get all the existing members",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "members"
                ],
                "summary": "List existing members",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.MembrocomEquipe"
                            }
                        }
                    }
                }
            }
        },
        "/membros/{id}": {
            "get": {
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "description": "Get all the existing members",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "members"
                ],
                "summary": "Shows member which has the id equals to given",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID_membro",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.MembrocomEquipe"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Deletar um membro existente",
                "tags": [
                    "members"
                ],
                "summary": "Deleta membro",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID_membro",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        }
    },
    "definitions": {
        "models.MembrocomEquipe": {
            "type": "object",
            "properties": {
                "funcao": {
                    "type": "string",
                    "example": "Desenvolvedor Backend"
                },
                "id_equipe": {
                    "type": "integer",
                    "example": 7
                },
                "id_membro": {
                    "type": "integer",
                    "example": 1
                },
                "nome_equipe": {
                    "type": "string",
                    "example": "Komanda"
                },
                "nome_membro": {
                    "type": "string",
                    "example": "Samuel"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicToken": {
            "type": "basic"
        }
    }
}